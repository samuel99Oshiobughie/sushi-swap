{"ast":null,"code":"import { useContext } from 'react';\nimport { getChainById } from '../helpers';\nimport { ConfigContext } from '../providers';\n\nconst validConfigs = configs => {\n  if (!(configs === null || configs === void 0 ? void 0 : configs.networks) || (configs === null || configs === void 0 ? void 0 : configs.networks.length) === 0) {\n    console.warn('No networks or supportedChain configured');\n  }\n\n  return configs;\n};\n/**\n * Returns singleton instance of {@link Config}.\n * Takes no parameters.\n * @public\n */\n\n\nexport function useConfig() {\n  var _a;\n\n  const {\n    config\n  } = useContext(ConfigContext); // backward compatible with supportedChains\n\n  if (config.supportedChains) {\n    console.warn('supportedChain is deprecated, please pass networks instead');\n    const networks = (_a = config.supportedChains) === null || _a === void 0 ? void 0 : _a.map(chainId => getChainById(chainId));\n    return validConfigs(Object.assign(Object.assign({}, config), {\n      networks\n    }));\n  }\n\n  return validConfigs(config);\n}\n/**\n * @public\n */\n\nexport function useUpdateConfig() {\n  const {\n    updateConfig\n  } = useContext(ConfigContext);\n  return updateConfig;\n}","map":{"version":3,"sources":["../../../../src/hooks/useConfig.ts"],"names":[],"mappings":"AAAA,SAAS,UAAT,QAA2B,OAA3B;AAEA,SAAS,YAAT,QAA6B,YAA7B;AACA,SAAS,aAAT,QAA8B,cAA9B;;AAEA,MAAM,YAAY,GAAI,OAAD,IAA4D;EAC/E,IAAI,EAAC,OAAO,KAAA,IAAP,IAAA,OAAO,KAAA,KAAA,CAAP,GAAO,KAAA,CAAP,GAAA,OAAO,CAAE,QAAV,KAAsB,CAAA,OAAO,KAAA,IAAP,IAAA,OAAO,KAAA,KAAA,CAAP,GAAO,KAAA,CAAP,GAAA,OAAO,CAAE,QAAT,CAAkB,MAAlB,MAA6B,CAAvD,EAA0D;IACxD,OAAO,CAAC,IAAR,CAAa,0CAAb;EACD;;EACD,OAAO,OAAP;AACD,CALD;AAOA;;;;AAIG;;;AACH,OAAM,SAAU,SAAV,GAAmB;;;EACvB,MAAM;IAAE;EAAF,IAAa,UAAU,CAAC,aAAD,CAA7B,CADuB,CAGvB;;EACA,IAAI,MAAM,CAAC,eAAX,EAA4B;IAC1B,OAAO,CAAC,IAAR,CAAa,4DAAb;IACA,MAAM,QAAQ,GAAY,CAAA,EAAA,GAAA,MAAM,CAAC,eAAP,MAAsB,IAAtB,IAAsB,EAAA,KAAA,KAAA,CAAtB,GAAsB,KAAA,CAAtB,GAAsB,EAAA,CAAE,GAAF,CAAO,OAAD,IAAa,YAAY,CAAC,OAAD,CAA/B,CAAhD;IACA,OAAO,YAAY,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACd,MADc,CAAA,EACR;MACT;IADS,CADQ,CAAA,CAAnB;EAID;;EAED,OAAO,YAAY,CAAC,MAAD,CAAnB;AACD;AAED;;AAEG;;AACH,OAAM,SAAU,eAAV,GAAyB;EAC7B,MAAM;IAAE;EAAF,IAAmB,UAAU,CAAC,aAAD,CAAnC;EACA,OAAO,YAAP;AACD","sourceRoot":"","sourcesContent":["import { useContext } from 'react';\nimport { getChainById } from '../helpers';\nimport { ConfigContext } from '../providers';\nconst validConfigs = (configs) => {\n    if (!(configs === null || configs === void 0 ? void 0 : configs.networks) || (configs === null || configs === void 0 ? void 0 : configs.networks.length) === 0) {\n        console.warn('No networks or supportedChain configured');\n    }\n    return configs;\n};\n/**\n * Returns singleton instance of {@link Config}.\n * Takes no parameters.\n * @public\n */\nexport function useConfig() {\n    var _a;\n    const { config } = useContext(ConfigContext);\n    // backward compatible with supportedChains\n    if (config.supportedChains) {\n        console.warn('supportedChain is deprecated, please pass networks instead');\n        const networks = (_a = config.supportedChains) === null || _a === void 0 ? void 0 : _a.map((chainId) => getChainById(chainId));\n        return validConfigs(Object.assign(Object.assign({}, config), { networks }));\n    }\n    return validConfigs(config);\n}\n/**\n * @public\n */\nexport function useUpdateConfig() {\n    const { updateConfig } = useContext(ConfigContext);\n    return updateConfig;\n}\n//# sourceMappingURL=useConfig.js.map"]},"metadata":{},"sourceType":"module"}