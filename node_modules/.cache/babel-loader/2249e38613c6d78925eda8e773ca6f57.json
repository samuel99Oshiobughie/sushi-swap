{"ast":null,"code":"var _jsxFileName = \"/Users/Cedar/Desktop/unisap2.0/packages/react-app/src/components/Exchange.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Contract } from '@ethersproject/contracts';\nimport { abis } from '@my-app/contracts';\nimport { ERC20, useContractFunction, useEthers, useTokenAllowance, useTokenBalance } from '@usedapp/core';\nimport { ethers } from 'ethers';\nimport { parseUnits } from 'ethers/lib/utils';\nimport { getAvailableTokens, getCounterpartTokens, findPoolByTokens, isOperationPending, getFailureMessage, getSuccessMessage } from '../utils';\nimport { ROUTER_ADDRESS } from '../config';\nimport { AmountIn, AmountOut, Balance } from './';\nimport styles from '../styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Exchange = _ref => {\n  _s();\n\n  var _findPoolByTokens$add, _findPoolByTokens;\n\n  let {\n    pools\n  } = _ref;\n  const {\n    account\n  } = useEthers();\n  const [fromValue, setFromValue] = useState(\"0\");\n  const [fromToken, setFromToken] = useState(pools[0].token0Address);\n  const [toToken, setToToken] = useState(\"\");\n  const [resetState, setResetState] = useState(false);\n  const fromValueBigNumber = parseUnits(fromValue);\n  const availableTokens = getAvailableTokens(pools);\n  const counterpartTokens = getCounterpartTokens(pools, fromToken);\n  const pairAddress = (_findPoolByTokens$add = (_findPoolByTokens = findPoolByTokens(pools, fromToken, toToken)) === null || _findPoolByTokens === void 0 ? void 0 : _findPoolByTokens.address) !== null && _findPoolByTokens$add !== void 0 ? _findPoolByTokens$add : \"\";\n  const routerContract = new Contract(ROUTER_ADDRESS, abis.router02);\n  const fromTokenContract = new Contract(fromToken, ERC20.abi);\n  const fromTokenBalance = useTokenBalance(fromToken, account);\n  const toTokenBalance = useTokenBalance(toToken, account);\n  const tokenAllowance = useTokenAllowance(fromToken, account, ROUTER_ADDRESS) || parseUnits('0');\n  const approvedNeeded = fromValueBigNumber.gt(tokenAllowance);\n  const fromValueIsGreatThan0 = fromValueBigNumber.gt(parseUnits(\"0\"));\n  const hasEnoughBalance = fromValueBigNumber.lte(fromTokenBalance !== null && fromTokenBalance !== void 0 ? fromTokenBalance : parseUnits(\"0\"));\n  const {\n    state: swapApproveState,\n    send: swapApproveSend\n  } = useContractFunction(fromTokenContract, \"approve\", {\n    transactionName: \"onApproveRequested\",\n    gasLimitBufferPercentage: 10\n  });\n  const {\n    state: swapExecuteState,\n    send: swapExecuteSend\n  } = useContractFunction(routerContract, \"swapExactTokensForTokens\", {\n    transactionName: \"swapExactTokensForTokens\",\n    gasLimitBufferPercentage: 10\n  });\n  const isApproving = isOperationPending(swapApproveState);\n  const isSwapping = isOperationPending(swapExecuteState);\n  const canApprove = !isApproving && approvedNeeded;\n  const canSwap = !approvedNeeded && !isSwapping && fromValueIsGreatThan0 && hasEnoughBalance;\n  const successMessage = getSuccessMessage(swapApproveState, swapExecuteState);\n  const failureMessage = getFailureMessage(swapApproveState, swapExecuteState);\n\n  const onApproveRequested = () => {\n    swapApproveSend(ROUTER_ADDRESS, ethers.constants.MaxUint256);\n  };\n\n  const onSwapRequested = () => {\n    swapExecuteSend(fromValueBigNumber, 0, [fromToken, toToken], account, Math.floor(Date.now() / 1000) + 60 * 2).then(() => {\n      setFromValue(\"0\");\n    });\n  };\n\n  const onFromValueChange = value => {\n    const trimmedValue = value.trim();\n\n    try {\n      if (trimmedValue) {\n        parseUnits(value);\n        setFromValue(value);\n      }\n    } catch (error) {\n      console.log({\n        error\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col w-full items-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(AmountIn, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Balance, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-8 w-[100%]\",\n      children: [/*#__PURE__*/_jsxDEV(AmountOut, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Balance, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), \"approvedNeeded\" && !isSwapping ? /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: !\"canApprove\",\n      onClick: () => {},\n      className: `${\"canSwap\" ? \"bg-site-pink text-white\" : \"bg-site-dim2 text-site-dim2\"} ${styles.actionButton}`,\n      children: isApproving ? \"Approving...\" : \"Approve\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: !\"canSwap\",\n      onClick: () => {},\n      className: `${\"canSwap\" ? \"bg-site-pink text-white\" : \"bg-site-dim2 text-site-dim2\"} ${styles.actionButton}`,\n      children: isSwapping ? \"Swapping...\" : \"hasEnoughBalance\" ? \"Swap\" : \"Insuficient balance\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }, this), \"failureMessage\" && !\"resetState\" ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: styles.message,\n      children: \"\\\"failureMessage\\\"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }, this) : \"successMessgae\" ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: styles.message,\n      children: \"\\\"successMessage\\\"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }, this) : \"\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Exchange, \"yCB6bURRaFdr0vVGeVBXmFVqz5c=\", false, function () {\n  return [useEthers, useTokenBalance, useTokenBalance, useTokenAllowance, useContractFunction, useContractFunction];\n});\n\n_c = Exchange;\nexport default Exchange;\n\nvar _c;\n\n$RefreshReg$(_c, \"Exchange\");","map":{"version":3,"names":["React","useState","Contract","abis","ERC20","useContractFunction","useEthers","useTokenAllowance","useTokenBalance","ethers","parseUnits","getAvailableTokens","getCounterpartTokens","findPoolByTokens","isOperationPending","getFailureMessage","getSuccessMessage","ROUTER_ADDRESS","AmountIn","AmountOut","Balance","styles","Exchange","pools","account","fromValue","setFromValue","fromToken","setFromToken","token0Address","toToken","setToToken","resetState","setResetState","fromValueBigNumber","availableTokens","counterpartTokens","pairAddress","address","routerContract","router02","fromTokenContract","abi","fromTokenBalance","toTokenBalance","tokenAllowance","approvedNeeded","gt","fromValueIsGreatThan0","hasEnoughBalance","lte","state","swapApproveState","send","swapApproveSend","transactionName","gasLimitBufferPercentage","swapExecuteState","swapExecuteSend","isApproving","isSwapping","canApprove","canSwap","successMessage","failureMessage","onApproveRequested","constants","MaxUint256","onSwapRequested","Math","floor","Date","now","then","onFromValueChange","value","trimmedValue","trim","error","console","log","actionButton","message"],"sources":["/Users/Cedar/Desktop/unisap2.0/packages/react-app/src/components/Exchange.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Contract } from '@ethersproject/contracts';\nimport { abis } from '@my-app/contracts';\nimport { ERC20, useContractFunction, useEthers, useTokenAllowance, useTokenBalance } from '@usedapp/core';\nimport { ethers } from 'ethers';\nimport { parseUnits } from 'ethers/lib/utils';\n\nimport { getAvailableTokens, getCounterpartTokens, findPoolByTokens, isOperationPending, getFailureMessage, getSuccessMessage } from '../utils';\nimport { ROUTER_ADDRESS } from '../config';\nimport { AmountIn, AmountOut, Balance } from './';\nimport styles from '../styles';\n\nconst Exchange = ({pools}) => {\n  const { account } = useEthers();\n  const [fromValue, setFromValue] = useState(\"0\");\n  const [fromToken, setFromToken] = useState(pools[0].token0Address);\n  const [toToken, setToToken] = useState(\"\");\n  const [resetState, setResetState] = useState(false);\n\n  const fromValueBigNumber = parseUnits(fromValue);\n  const availableTokens = getAvailableTokens(pools);\n  const counterpartTokens = getCounterpartTokens(pools, fromToken);\n  const pairAddress = findPoolByTokens(pools, fromToken, toToken)?.address ?? \"\";\n\n  const routerContract = new Contract(ROUTER_ADDRESS, abis.router02);\n  const fromTokenContract = new Contract(fromToken, ERC20.abi);\n  const fromTokenBalance = useTokenBalance(fromToken, account);\n  const toTokenBalance = useTokenBalance(toToken, account);\n  const tokenAllowance = useTokenAllowance(fromToken, account, ROUTER_ADDRESS) || parseUnits('0');\n  const approvedNeeded = fromValueBigNumber.gt(tokenAllowance);\n  const fromValueIsGreatThan0 = fromValueBigNumber.gt(parseUnits(\"0\"));\n  const hasEnoughBalance = fromValueBigNumber.lte(fromTokenBalance ?? parseUnits(\"0\"));\n\n  const { state: swapApproveState, send: swapApproveSend } = \n  useContractFunction(fromTokenContract, \"approve\", {\n    transactionName: \"onApproveRequested\",\n    gasLimitBufferPercentage: 10,\n  });\n\n  const { state: swapExecuteState, send: swapExecuteSend } = \n  useContractFunction(routerContract, \"swapExactTokensForTokens\", {\n    transactionName: \"swapExactTokensForTokens\",\n    gasLimitBufferPercentage: 10,\n  });\n\n  const isApproving = isOperationPending(swapApproveState);\n  const isSwapping = isOperationPending(swapExecuteState);\n  const canApprove = !isApproving && approvedNeeded;\n  const canSwap = !approvedNeeded && !isSwapping && fromValueIsGreatThan0 && hasEnoughBalance;\n\n  const successMessage = getSuccessMessage(swapApproveState, swapExecuteState);\n  const failureMessage = getFailureMessage(swapApproveState, swapExecuteState);\n\n  const onApproveRequested = () => {\n    swapApproveSend(ROUTER_ADDRESS, ethers.constants.MaxUint256);\n  }\n\n  const onSwapRequested = () => {\n    swapExecuteSend(\n      fromValueBigNumber,\n      0,\n      [fromToken, toToken],\n      account,\n      Math.floor(Date.now() / 1000) + 60 * 2\n    ).then(() => {\n      setFromValue(\"0\");\n    })\n  }\n\n  const onFromValueChange = (value) => {\n    const trimmedValue = value.trim();\n\n    try {\n      if(trimmedValue) {\n        parseUnits(value);\n\n        setFromValue(value);\n      }\n    } catch (error) {\n      console.log({error})\n    }\n  }\n\n  return (\n    <div className=\"flex flex-col w-full items-center\">\n      <div className=\"mb-8\">\n        <AmountIn \n        />\n        <Balance  />\n      </div>\n      <div className=\"mb-8 w-[100%]\">\n        <AmountOut \n        />\n        <Balance  />\n      </div>\n\n      {\"approvedNeeded\" && !isSwapping ? (\n        <button\n          disabled={!\"canApprove\"}\n          onClick={() => {}}\n          className={\n            `${\n              \"canSwap\"\n              ? \"bg-site-pink text-white\"\n              : \"bg-site-dim2 text-site-dim2\"\n            } ${styles.actionButton}`\n          }>\n          {isApproving ? \"Approving...\" : \"Approve\"}\n        </button>\n      ) : <button\n          disabled={!\"canSwap\"}\n          onClick={() => {}}\n          className={\n            `${\n              \"canSwap\"\n              ? \"bg-site-pink text-white\"\n              : \"bg-site-dim2 text-site-dim2\"\n            } ${styles.actionButton}`\n          }>\n            {isSwapping ? \"Swapping...\" : \"hasEnoughBalance\" ?\n             \"Swap\" : \"Insuficient balance\" }\n          </button>\n      }\n\n      {\"failureMessage\" && !\"resetState\" ? (\n        <p className={styles.message}>\"failureMessage\"</p>\n      ) : \"successMessgae\" ? (\n        <p className={styles.message}>\"successMessage\"</p>\n      ) : \"\"}\n    </div>\n  )\n}\n\nexport default Exchange"],"mappings":"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"},"metadata":{},"sourceType":"module"}