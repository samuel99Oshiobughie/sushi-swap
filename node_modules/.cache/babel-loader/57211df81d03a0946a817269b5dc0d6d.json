{"ast":null,"code":"import { useCallback, useState } from 'react';\nimport { useNotificationsContext, useTransactionsContext } from '../providers';\nimport { BigNumber, errors } from 'ethers';\n/**\n * @internal\n */\n\nexport async function estimateTransactionGasLimit(transactionRequest, signer, gasLimitBufferPercentage) {\n  if (!signer || !transactionRequest) {\n    return undefined;\n  }\n\n  try {\n    const estimatedGas = transactionRequest.gasLimit ? BigNumber.from(transactionRequest.gasLimit) : await signer.estimateGas(transactionRequest);\n    return estimatedGas === null || estimatedGas === void 0 ? void 0 : estimatedGas.mul(gasLimitBufferPercentage + 100).div(100);\n  } catch (err) {\n    console.error(err);\n    return undefined;\n  }\n}\n/**\n * @internal\n */\n\nexport async function estimateContractFunctionGasLimit(contractWithSigner, functionName, args, gasLimitBufferPercentage) {\n  try {\n    const estimatedGas = await contractWithSigner.estimateGas[functionName](...args);\n    const gasLimit = estimatedGas === null || estimatedGas === void 0 ? void 0 : estimatedGas.mul(gasLimitBufferPercentage + 100).div(100);\n    return gasLimit;\n  } catch (err) {\n    console.error(err);\n    return undefined;\n  }\n}\n\nconst isDroppedAndReplaced = e => (e === null || e === void 0 ? void 0 : e.code) === errors.TRANSACTION_REPLACED && (e === null || e === void 0 ? void 0 : e.replacement) && ((e === null || e === void 0 ? void 0 : e.reason) === 'repriced' || (e === null || e === void 0 ? void 0 : e.cancelled) === false);\n\nexport function usePromiseTransaction(chainId, options) {\n  const [state, setState] = useState({\n    status: 'None'\n  });\n  const {\n    addTransaction\n  } = useTransactionsContext();\n  const {\n    addNotification\n  } = useNotificationsContext();\n  const resetState = useCallback(() => {\n    setState({\n      status: 'None'\n    });\n  }, [setState]);\n  const promiseTransaction = useCallback(async transactionPromise => {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v, _w;\n\n    if (!chainId) return;\n    let transaction = undefined;\n\n    try {\n      setState({\n        status: 'PendingSignature',\n        chainId\n      });\n      transaction = await transactionPromise;\n      setState({\n        transaction,\n        status: 'Mining',\n        chainId\n      });\n      addTransaction({\n        transaction: Object.assign(Object.assign({}, transaction), {\n          chainId: chainId\n        }),\n        submittedAt: Date.now(),\n        transactionName: options === null || options === void 0 ? void 0 : options.transactionName\n      });\n      const receipt = await transaction.wait();\n      setState({\n        receipt,\n        transaction,\n        status: 'Success',\n        chainId\n      });\n      return receipt;\n    } catch (e) {\n      const parsedErrorCode = parseInt((_g = (_e = (_c = (_b = (_a = e.error) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.code) !== null && _c !== void 0 ? _c : (_d = e.error) === null || _d === void 0 ? void 0 : _d.code) !== null && _e !== void 0 ? _e : (_f = e.data) === null || _f === void 0 ? void 0 : _f.code) !== null && _g !== void 0 ? _g : e.code);\n      const errorCode = isNaN(parsedErrorCode) ? undefined : parsedErrorCode;\n      const errorHash = (_l = (_k = (_j = (_h = e === null || e === void 0 ? void 0 : e.error) === null || _h === void 0 ? void 0 : _h.data) === null || _j === void 0 ? void 0 : _j.originalError) === null || _k === void 0 ? void 0 : _k.data) !== null && _l !== void 0 ? _l : (_m = e === null || e === void 0 ? void 0 : e.error) === null || _m === void 0 ? void 0 : _m.data;\n      const errorMessage = (_v = (_t = (_s = (_q = (_p = (_o = e.error) === null || _o === void 0 ? void 0 : _o.data) === null || _p === void 0 ? void 0 : _p.message) !== null && _q !== void 0 ? _q : (_r = e.error) === null || _r === void 0 ? void 0 : _r.message) !== null && _s !== void 0 ? _s : e.reason) !== null && _t !== void 0 ? _t : (_u = e.data) === null || _u === void 0 ? void 0 : _u.message) !== null && _v !== void 0 ? _v : e.message;\n\n      if (transaction) {\n        const droppedAndReplaced = isDroppedAndReplaced(e);\n\n        if (droppedAndReplaced) {\n          const status = e.receipt.status === 0 ? 'Fail' : 'Success';\n          const type = status === 'Fail' ? 'transactionFailed' : 'transactionSucceed';\n          addNotification({\n            notification: {\n              type,\n              submittedAt: Date.now(),\n              transaction: e.replacement,\n              receipt: e.receipt,\n              transactionName: (_w = e.replacement) === null || _w === void 0 ? void 0 : _w.transactionName,\n              originalTransaction: transaction\n            },\n            chainId\n          });\n          setState({\n            status,\n            transaction: e.replacement,\n            originalTransaction: transaction,\n            receipt: e.receipt,\n            errorMessage,\n            errorCode,\n            errorHash,\n            chainId\n          });\n        } else {\n          setState({\n            status: 'Fail',\n            transaction,\n            receipt: e.receipt,\n            errorMessage,\n            errorCode,\n            errorHash,\n            chainId\n          });\n        }\n      } else {\n        setState({\n          status: 'Exception',\n          errorMessage,\n          errorCode,\n          errorHash,\n          chainId\n        });\n      }\n\n      return undefined;\n    }\n  }, [chainId, setState, addTransaction, options]);\n  return {\n    promiseTransaction,\n    state,\n    resetState\n  };\n}","map":{"version":3,"sources":["../../../../src/hooks/usePromiseTransaction.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { useCallback, useState } from 'react';\nimport { useNotificationsContext, useTransactionsContext } from '../providers';\nimport { BigNumber, errors } from 'ethers';\n/**\n * @internal\n */\nexport async function estimateTransactionGasLimit(transactionRequest, signer, gasLimitBufferPercentage) {\n    if (!signer || !transactionRequest) {\n        return undefined;\n    }\n    try {\n        const estimatedGas = transactionRequest.gasLimit\n            ? BigNumber.from(transactionRequest.gasLimit)\n            : await signer.estimateGas(transactionRequest);\n        return estimatedGas === null || estimatedGas === void 0 ? void 0 : estimatedGas.mul(gasLimitBufferPercentage + 100).div(100);\n    }\n    catch (err) {\n        console.error(err);\n        return undefined;\n    }\n}\n/**\n * @internal\n */\nexport async function estimateContractFunctionGasLimit(contractWithSigner, functionName, args, gasLimitBufferPercentage) {\n    try {\n        const estimatedGas = await contractWithSigner.estimateGas[functionName](...args);\n        const gasLimit = estimatedGas === null || estimatedGas === void 0 ? void 0 : estimatedGas.mul(gasLimitBufferPercentage + 100).div(100);\n        return gasLimit;\n    }\n    catch (err) {\n        console.error(err);\n        return undefined;\n    }\n}\nconst isDroppedAndReplaced = (e) => (e === null || e === void 0 ? void 0 : e.code) === errors.TRANSACTION_REPLACED && (e === null || e === void 0 ? void 0 : e.replacement) && ((e === null || e === void 0 ? void 0 : e.reason) === 'repriced' || (e === null || e === void 0 ? void 0 : e.cancelled) === false);\nexport function usePromiseTransaction(chainId, options) {\n    const [state, setState] = useState({ status: 'None' });\n    const { addTransaction } = useTransactionsContext();\n    const { addNotification } = useNotificationsContext();\n    const resetState = useCallback(() => {\n        setState({ status: 'None' });\n    }, [setState]);\n    const promiseTransaction = useCallback(async (transactionPromise) => {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v, _w;\n        if (!chainId)\n            return;\n        let transaction = undefined;\n        try {\n            setState({ status: 'PendingSignature', chainId });\n            transaction = await transactionPromise;\n            setState({ transaction, status: 'Mining', chainId });\n            addTransaction({\n                transaction: Object.assign(Object.assign({}, transaction), { chainId: chainId }),\n                submittedAt: Date.now(),\n                transactionName: options === null || options === void 0 ? void 0 : options.transactionName,\n            });\n            const receipt = await transaction.wait();\n            setState({ receipt, transaction, status: 'Success', chainId });\n            return receipt;\n        }\n        catch (e) {\n            const parsedErrorCode = parseInt((_g = (_e = (_c = (_b = (_a = e.error) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.code) !== null && _c !== void 0 ? _c : (_d = e.error) === null || _d === void 0 ? void 0 : _d.code) !== null && _e !== void 0 ? _e : (_f = e.data) === null || _f === void 0 ? void 0 : _f.code) !== null && _g !== void 0 ? _g : e.code);\n            const errorCode = isNaN(parsedErrorCode) ? undefined : parsedErrorCode;\n            const errorHash = (_l = (_k = (_j = (_h = e === null || e === void 0 ? void 0 : e.error) === null || _h === void 0 ? void 0 : _h.data) === null || _j === void 0 ? void 0 : _j.originalError) === null || _k === void 0 ? void 0 : _k.data) !== null && _l !== void 0 ? _l : (_m = e === null || e === void 0 ? void 0 : e.error) === null || _m === void 0 ? void 0 : _m.data;\n            const errorMessage = (_v = (_t = (_s = (_q = (_p = (_o = e.error) === null || _o === void 0 ? void 0 : _o.data) === null || _p === void 0 ? void 0 : _p.message) !== null && _q !== void 0 ? _q : (_r = e.error) === null || _r === void 0 ? void 0 : _r.message) !== null && _s !== void 0 ? _s : e.reason) !== null && _t !== void 0 ? _t : (_u = e.data) === null || _u === void 0 ? void 0 : _u.message) !== null && _v !== void 0 ? _v : e.message;\n            if (transaction) {\n                const droppedAndReplaced = isDroppedAndReplaced(e);\n                if (droppedAndReplaced) {\n                    const status = e.receipt.status === 0 ? 'Fail' : 'Success';\n                    const type = status === 'Fail' ? 'transactionFailed' : 'transactionSucceed';\n                    addNotification({\n                        notification: {\n                            type,\n                            submittedAt: Date.now(),\n                            transaction: e.replacement,\n                            receipt: e.receipt,\n                            transactionName: (_w = e.replacement) === null || _w === void 0 ? void 0 : _w.transactionName,\n                            originalTransaction: transaction,\n                        },\n                        chainId,\n                    });\n                    setState({\n                        status,\n                        transaction: e.replacement,\n                        originalTransaction: transaction,\n                        receipt: e.receipt,\n                        errorMessage,\n                        errorCode,\n                        errorHash,\n                        chainId,\n                    });\n                }\n                else {\n                    setState({ status: 'Fail', transaction, receipt: e.receipt, errorMessage, errorCode, errorHash, chainId });\n                }\n            }\n            else {\n                setState({ status: 'Exception', errorMessage, errorCode, errorHash, chainId });\n            }\n            return undefined;\n        }\n    }, [chainId, setState, addTransaction, options]);\n    return { promiseTransaction, state, resetState };\n}\n//# sourceMappingURL=usePromiseTransaction.js.map"]},"metadata":{},"sourceType":"module"}