{"ast":null,"code":"import { encodeUint } from '../common';\nimport { encodeCalls } from '../multicall2/encoder';\nimport { ethersAbi } from './constants';\nconst selector = ethersAbi.getSighash('aggregate');\nexport function encodeAggregate(calls) {\n  // function aggregate(tuple(address target, bytes callData)[] calls) public returns (tuple(uint256 blockNumber, bytes returnData)[])\n  // offset of the array is 0x20 because the only thing\n  // that goes before the array is the offset itself\n  const dynamicOffset = 0x20;\n  const res = selector + encodeUint(dynamicOffset); // encode dynamic array of calls\n\n  return encodeCalls(res, calls);\n}","map":{"version":3,"sources":["../../../../../src/abi/multicall/encoder.ts"],"names":[],"mappings":"AAAA,SAAS,UAAT,QAA2B,WAA3B;AACA,SAAS,WAAT,QAA4B,uBAA5B;AACA,SAAS,SAAT,QAA0B,aAA1B;AAEA,MAAM,QAAQ,GAAG,SAAS,CAAC,UAAV,CAAqB,WAArB,CAAjB;AAEA,OAAM,SAAU,eAAV,CAA0B,KAA1B,EAAmD;EACvD;EAEA;EACA;EACA,MAAM,aAAa,GAAG,IAAtB;EACA,MAAM,GAAG,GAAG,QAAQ,GAAG,UAAU,CAAC,aAAD,CAAjC,CANuD,CAQvD;;EACA,OAAO,WAAW,CAAC,GAAD,EAAM,KAAN,CAAlB;AACD","sourceRoot":"","sourcesContent":["import { encodeUint } from '../common';\nimport { encodeCalls } from '../multicall2/encoder';\nimport { ethersAbi } from './constants';\nconst selector = ethersAbi.getSighash('aggregate');\nexport function encodeAggregate(calls) {\n    // function aggregate(tuple(address target, bytes callData)[] calls) public returns (tuple(uint256 blockNumber, bytes returnData)[])\n    // offset of the array is 0x20 because the only thing\n    // that goes before the array is the offset itself\n    const dynamicOffset = 0x20;\n    const res = selector + encodeUint(dynamicOffset);\n    // encode dynamic array of calls\n    return encodeCalls(res, calls);\n}\n//# sourceMappingURL=encoder.js.map"]},"metadata":{},"sourceType":"module"}